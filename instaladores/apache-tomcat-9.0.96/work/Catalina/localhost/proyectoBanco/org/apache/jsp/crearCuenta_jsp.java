/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.96
 * Generated at: 2025-10-07 05:35:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import negocio.Usuario;

public final class crearCuenta_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("negocio.Usuario");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');

    Usuario usuario = (Usuario) session.getAttribute("usuario");
    if (usuario == null) {
        response.sendRedirect("login.jsp");
        return;
    }

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"es\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <title>Crear Cuenta Bancaria</title>\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css\" rel=\"stylesheet\">\n");
      out.write("\n");
      out.write("    <style>\n");
      out.write("        body {\n");
      out.write("            background-color: #ffffff;\n");
      out.write("            height: 100vh;\n");
      out.write("            display: flex;\n");
      out.write("            align-items: center;\n");
      out.write("            justify-content: center;\n");
      out.write("            font-family: 'Segoe UI', sans-serif;\n");
      out.write("            border: 10px solid transparent;\n");
      out.write("            background-image: linear-gradient(#fff, #fff),\n");
      out.write("                              linear-gradient(180deg, #B22222, #FFD700); /* rojo sangre â†’ dorado */\n");
      out.write("            background-origin: border-box;\n");
      out.write("            background-clip: content-box, border-box;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .card {\n");
      out.write("            background-color: #fff;\n");
      out.write("            border: 2px solid #B22222;\n");
      out.write("            border-radius: 1.5rem;\n");
      out.write("            box-shadow: 0 0 25px rgba(178, 34, 34, 0.25);\n");
      out.write("            padding: 2rem;\n");
      out.write("            width: 32rem;\n");
      out.write("            transition: all 0.3s ease;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .card:hover {\n");
      out.write("            transform: translateY(-4px);\n");
      out.write("            box-shadow: 0 0 30px rgba(255, 215, 0, 0.4);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        h4 {\n");
      out.write("            color: #B22222;\n");
      out.write("            font-weight: 700;\n");
      out.write("            margin-bottom: 1.5rem;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .form-label {\n");
      out.write("            color: #5A0000;\n");
      out.write("            font-weight: 600;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .form-control, .form-select {\n");
      out.write("            border: 1px solid #B22222;\n");
      out.write("            border-radius: 0.5rem;\n");
      out.write("            transition: box-shadow 0.3s, border-color 0.3s;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .form-control:focus, .form-select:focus {\n");
      out.write("            border-color: #FFD700;\n");
      out.write("            box-shadow: 0 0 6px rgba(255, 215, 0, 0.6);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .btn-success {\n");
      out.write("            background: linear-gradient(90deg, #B22222, #8B0000);\n");
      out.write("            border: none;\n");
      out.write("            font-weight: 600;\n");
      out.write("            color: #FFD700;\n");
      out.write("            box-shadow: 0 0 8px rgba(255, 215, 0, 0.5);\n");
      out.write("            transition: all 0.3s ease;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .btn-success:hover {\n");
      out.write("            background: linear-gradient(90deg, #8B0000, #5A0000);\n");
      out.write("            color: #fff;\n");
      out.write("            box-shadow: 0 0 12px rgba(255, 215, 0, 0.8);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .btn-outline-secondary {\n");
      out.write("            border-color: #B22222;\n");
      out.write("            color: #B22222;\n");
      out.write("            font-weight: 600;\n");
      out.write("            transition: all 0.3s ease;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .btn-outline-secondary:hover {\n");
      out.write("            background: #B22222;\n");
      out.write("            color: #FFD700;\n");
      out.write("            box-shadow: 0 0 10px rgba(255, 215, 0, 0.5);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .icono {\n");
      out.write("            font-size: 3rem;\n");
      out.write("            color: #B22222;\n");
      out.write("            margin-bottom: 0.8rem;\n");
      out.write("        }\n");
      out.write("    </style>\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("    <div class=\"card shadow-lg\">\n");
      out.write("        <div class=\"text-center\">\n");
      out.write("            <i class=\"bi bi-wallet2 icono\"></i>\n");
      out.write("            <h4>Crear Nueva Cuenta</h4>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <form action=\"CuentaController\" method=\"post\">\n");
      out.write("\n");
      out.write("            <!-- Tipo de cuenta -->\n");
      out.write("            <div class=\"mb-3\">\n");
      out.write("                <label class=\"form-label\">Tipo de Cuenta</label>\n");
      out.write("                <select name=\"tipo_cuenta\" class=\"form-select\" required>\n");
      out.write("                    <option value=\"\">-- Selecciona un tipo --</option>\n");
      out.write("                    <option value=\"AH\">Cuenta de Ahorro</option>\n");
      out.write("                    <option value=\"CO\">Cuenta Corriente</option>\n");
      out.write("                    <option value=\"PL\">Cuenta a Plazo Fijo</option>\n");
      out.write("                </select>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("            <!-- Moneda -->\n");
      out.write("            <div class=\"mb-3\">\n");
      out.write("                <label class=\"form-label\">Moneda</label>\n");
      out.write("                <select name=\"moneda\" class=\"form-select\" required>\n");
      out.write("                    <option value=\"\">-- Selecciona una moneda --</option>\n");
      out.write("                    <option value=\"PEN\">Soles</option>\n");
      out.write("                    <option value=\"USD\">DÃ³lares</option>\n");
      out.write("                </select>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("            <!-- DNI -->\n");
      out.write("            <div class=\"mb-3\">\n");
      out.write("                <label class=\"form-label\">DNI del Titular</label>\n");
      out.write("                <input type=\"text\" name=\"dni_usuario\" class=\"form-control\" value=\"");
      out.print( usuario.getDni() );
      out.write("\" readonly>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("            <!-- BotÃ³n enviar -->\n");
      out.write("            <button type=\"submit\" class=\"btn btn-success w-100\">Crear Cuenta</button>\n");
      out.write("\n");
      out.write("            <!-- BotÃ³n volver -->\n");
      out.write("            <!-- <a href=\"menu.jsp\" class=\"btn btn-outline-secondary w-100 mt-3\">Volver al MenÃº</a> -->\n");
      out.write("        </form>\n");
      out.write("    </div>\n");
      out.write("     ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/reutilizables/complementoTempo.jsp", out, false);
      out.write("           \n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
